unit frmDatabaseHandeling_u;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids, DBGrids, Spin, ExtCtrls, dmCards_u, Mask,
  DBCtrls, jpeg;

type
  TForm1 = class(TForm)
    DBNavigator1: TDBNavigator;
    dbgCards: TDBGrid;
    cbxSort: TComboBox;
    btnSearchName: TButton;
    Panel1: TPanel;
    edtInsertName: TEdit;
    sedInsertAtk: TSpinEdit;
    edtInsertSrc: TEdit;
    Label1: TLabel;
    btnInsert: TButton;
    procedure cbxSortChange(Sender: TObject);
    procedure btnSearchNameClick(Sender: TObject);
    procedure edtInsertNameClick(Sender: TObject);
    procedure edtInsertSrcClick(Sender: TObject);
    procedure edtInsertNameExit(Sender: TObject);
    procedure edtInsertSrcExit(Sender: TObject);
    procedure btnInsertClick(Sender: TObject);
  private
    { Private declarations }
    procedure fixEdits(sFix: string; iEdit: integer);
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.btnInsertClick(Sender: TObject);
begin
  with DataModule1 do
  begin
    tblCards.Insert;
    tblCards['cardName'] := edtInsertName.Text;
    tblCards['imageSRC'] := edtInsertSrc.Text;
    tblCards['atk'] := sedInsertAtk.Value;
    tblCards.Post;
  end;
end;

procedure TForm1.btnSearchNameClick(Sender: TObject);
var
  sSearch: string;
begin
  sSearch := InputBox('Search', 'Who would you like to search for?', 'Virgo');

  with DataModule1 do
  begin
    tblCards.First;

    while not tblCards.eof do
    begin
      if UpperCase(tblCards['cardName']) = UpperCase(sSearch) then
      begin
        ShowMessage(tblCards['cardName'] + ' has ' + IntToStr(tblCards['atk'])
            + ' attack points');
        Exit;
      end
      else
      begin
        tblCards.Next;
      end;
    end;
    ShowMessage('Could not find ' + sSearch);
  end;

end;

procedure TForm1.cbxSortChange(Sender: TObject);
begin
  if cbxSort.ItemIndex = 0 then
  begin
    DataModule1.tblCards.Sort := 'atk ASC';
  end
  else if cbxSort.ItemIndex = 1 then
  begin
    DataModule1.tblCards.Sort := 'atk DESC'
  end
  else if cbxSort.ItemIndex = 2 then
  begin
    DataModule1.tblCards.Sort := 'cardName ASC'
  end
  else if cbxSort.ItemIndex = 3 then

  begin
    DataModule1.tblCards.Sort := 'cardName DESC'
  end;

end;

procedure TForm1.edtInsertNameClick(Sender: TObject);
begin
  fixEdits('clear', 1);
end;

procedure TForm1.edtInsertNameExit(Sender: TObject);
begin
  fixEdits('fix', 1);
end;

procedure TForm1.edtInsertSrcClick(Sender: TObject);
begin
  fixEdits('clear', 2);
end;

procedure TForm1.edtInsertSrcExit(Sender: TObject);
begin
  fixEdits('fix', 2);
end;

procedure TForm1.fixEdits(sFix: string; iEdit: integer);
begin
  if sFix = 'clear' then
  begin
    if iEdit = 1 then
    begin
      if edtInsertName.Text = 'Name' then
      begin
        edtInsertName.Text := '';
      end;
    end
    else if iEdit = 2 then
    begin
      if edtInsertSrc.Text = 'the/source/to/the/image.jpg' then
      begin
        edtInsertSrc.Text := '';
      end;
    end;
  end;

  if sFix = 'fix' then
  begin
    if iEdit = 1 then
    begin
      if edtInsertName.Text = '' then
      begin
        edtInsertName.Text := 'Name';
      end;
    end
    else if iEdit = 2 then
    begin
      if edtInsertSrc.Text = '' then
      begin
        edtInsertSrc.Text := 'the/source/to/the/image.jpg';
      end;
    end;
  end;
end;

end.
